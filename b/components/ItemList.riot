<ItemList>
  <div class="container">
    <div>
      <h5 class="title is-5">{props.title}</h5>
    </div>

    <div>
      <p if={props.nb_res == 1 || props.nb_res == 0}>{props.nb_res} r√©sultat</p>
      <p if={props.nb_res > 1}>{props.nb_res} r√©sultats</p>
    </div>

    <div class="section result">
      <div class="columns is-multiline">
        <div class="column is-one-quarter" each={item in props.results}>
          <div class="card">
            <div class="card-content">
              <header class="short-text">
                <a class="fav" onclick={ () => toggleFavorite(item) }>
                  <i class={ isFavorite(item.id) ? 'fas fa-star favorited' : 'fas fa-star' }></i>
                </a>
                <div>
                  <a if={item.type === 'artist'} onclick={() => goToArtist(item)}>
                    <h2 class="title is-6">{item.title}</h2>
                  </a>
                  <a if={item.type === 'release'} onclick={() => goToRelease(item)}>
                    <h2 class="title is-6">{item.title}</h2>
                  </a>
                  <a if={item.type === 'master'} onclick={() => goToMaster(item)}>
                    <h2 class="title is-6">{item.title}</h2>
                  </a>
                  <a if={item.type === 'label'}>
                    <h2 class="title is-6">{item.title}</h2>
                  </a>
                </div>
              </header>

              <figure class="image">
                <img src={item.cover_image} alt="Cover" />
              </figure>

              <div if={item.type === 'release' && item.master_id}>
                <br />
                <a onclick={() => goToMaster(item)}>
                  Voir son Master
                </a>
              </div>

              <footer if={item.community} class="short-text">
                <span class="want">
                  {item.community.want} <i class="fas fa-check"></i>
                </span>
                <span class="have">
                  {item.community.have} <i class="fas fa-heart"></i>
                </span>
              </footer>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script>
    export default {
      props: ['title', 'results', 'nb_res'],

      app: {
        isLoggedIn: false,
        favorites: []
      },

      onMounted() {
        this.app.isLoggedIn = localStorage.getItem("isLoggedIn") === "true";
        if (this.app.isLoggedIn) {
          this.loadFavorites();
        }
      },

      async loadFavorites() {
        this.app.favorites = await window.getFavorites();
        this.update();
      },

      isFavorite(id) {
        return this.app.favorites.some(fav => fav.item_id === id);
      },

      async toggleFavorite(item) {
        if (!this.app.isLoggedIn) {
            alert("Connectez-vous pour ajouter un favori.");
            return;
        }

        const existing = this.app.favorites.find(f => f.item_id === item.id);

        if (existing && window.removeFavorite) {
            await window.removeFavorite(existing.id);
            alert("Favori retir√©.");
        } else if (window.addFavorite) {
            await window.addFavorite(item.id, item.type, item.cover_image, item.title);
            alert("Ajout√© aux favoris !");
        }

        await this.loadFavorites();

        // MAJ du compteur global si d√©fini
        if (window.updateFavoriteCount) window.updateFavoriteCount();

        this.update(); // üëà assure le rafra√Æchissement visuel
        },

      goToArtist(item) {
        window.selectedArtist = {
          id: item.id,
          img: item.cover_image
        };
        window.history.pushState(null, "", "/artist");
        window.dispatchEvent(new PopStateEvent("popstate"));
      },

      goToRelease(item) {
        window.selectedRelease = {
          id: item.id
        };
        window.history.pushState(null, "", "/release");
        window.dispatchEvent(new PopStateEvent("popstate"));
      },

      goToMaster(item) {
        window.selectedMaster = {
          id: item.master_id || item.id,
          img: item.cover_image
        };
        window.history.pushState(null, "", "/masterview");
        window.dispatchEvent(new PopStateEvent("popstate"));
      }
    };
  </script>

  <style scoped>
    .fav i {
      font-size: 1.5rem;
      cursor: pointer;
      transition: color 0.3s ease;
      color: blue;
    }
    .favorited {
      color: gold !important;
    }
  </style>
</ItemList>
